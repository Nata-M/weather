{"version":3,"sources":["container/Container.js","components/header/Header.js","components/main/Parameters.js","components/main/forecast/Card.js","components/main/forecast/Next.js","components/main/Main.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","children","weekdays","months","today","Date","day","getDay","console","log","Header","getDate","getMonth","getYear","Parameters","text","num","icon","Math","round","Card","date","img","min","max","src","Next","useState","temp","setTemp","tomorrow","setDate","dayAfter","twoDaysAfter","threeDaysAfter","useEffect","axios","get","then","res","data","daily","minTomorrow","maxTomorrow","minDayAfter","maxDayAfter","minTwoDays","maxTwoDays","minThreeDays","maxThreeDays","catch","err","error","Main","weather","setWeather","main","feel","feels_like","humidity","wind","speed","HomePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a4bf8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css'\r\n\r\nconst Container = (props) => {\r\n  return (\r\n    <div className='Container'>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container","import React from 'react';\r\nimport './Header.css';\r\nconst weekdays = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n]\r\nconst months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n]\r\nconst today = new Date();\r\nconst day = today.getDay();\r\n\r\nconsole.log(today);\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className='Header'>\r\n            {weekdays[day]}, {today.getDate()} {months[today.getMonth()]}, {today.getYear() + 1900}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport './Main.css';\r\n\r\nconst Parameters = (props) => {\r\n    const { text, num, icon } = props\r\n    return (\r\n        <div className='parameters'>\r\n            <p>{text}</p>\r\n            <p>{Math.round(num)} {icon !== null ? icon : null}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Parameters","import React from 'react';\r\nimport './Next.css';\r\n\r\nconst Card = (props) => {\r\n  const { day, date, img, min, max } = props;\r\n\r\n  return (\r\n    <div className='card'>\r\n      <p>{day}</p>\r\n      <p>{date}</p>\r\n      <img className='clouds-img' src={img} />\r\n      <div className='temp'>\r\n        <p>{Math.round(min)}&#176;</p>\r\n        <p>{Math.round(max)}&#176;</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useEffect, useState } from 'react';\r\nimport './Next.css';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst Next = () => {\r\n  const [temp, setTemp] = useState({})\r\n\r\n  const weekdays = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ]\r\n  const today = new Date();\r\n  const day = today.getDay();\r\n  const tomorrow = new Date(today)\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const dayAfter = new Date(tomorrow);\r\n  dayAfter.setDate(dayAfter.getDate() + 1);\r\n  const twoDaysAfter = new Date(dayAfter);\r\n  twoDaysAfter.setDate(twoDaysAfter.getDate() + 1);\r\n  const threeDaysAfter = new Date(twoDaysAfter);\r\n  threeDaysAfter.setDate(threeDaysAfter.getDate() + 1);\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://api.openweathermap.org/data/2.5/onecall?lat=41.6941&lon=44.8337&units=metric&cnt=14&exclude=hourly,minutely&appid=fd5179b748f76ec3198fcf32fa82a64b')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const data = res.data;\r\n        setTemp({\r\n          min: data.daily[0].temp.min,\r\n          max: res.data.daily[0].temp.max,\r\n          minTomorrow: res.data.daily[1].temp.min,\r\n          maxTomorrow: res.data.daily[1].temp.max,\r\n          minDayAfter: res.data.daily[2].temp.min,\r\n          maxDayAfter: res.data.daily[2].temp.max,\r\n          minTwoDays: res.data.daily[3].temp.min,\r\n          maxTwoDays: res.data.daily[3].temp.max,\r\n          minThreeDays: res.data.daily[4].temp.min,\r\n          maxThreeDays: res.data.daily[4].temp.max\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [])\r\n\r\n  return (\r\n    <div className='forecast'>\r\n      <div className='weather-card'>\r\n        <Card day={weekdays[day]}\r\n          date={today.getDate() + ' ' + months[today.getMonth()]}\r\n          img='/transparent-weather-4.png'\r\n          min={temp.min}\r\n          max={temp.max} />\r\n      </div>\r\n      <div className='weather-card'>\r\n        <Card day={weekdays[tomorrow.getDay()]}\r\n          date={tomorrow.getDate()\r\n            + ' ' + months[tomorrow.getMonth()]}\r\n          img='/unnamed.png'\r\n          min={temp.minTomorrow}\r\n          max={temp.maxTomorrow}\r\n        />\r\n      </div>\r\n      <div className='weather-card'>\r\n        <Card day={weekdays[dayAfter.getDay()]} text={tomorrow}\r\n          date={dayAfter.getDate() + ' ' + months[dayAfter.getMonth()]}\r\n          img='/rain.png'\r\n          min={temp.minDayAfter}\r\n          max={temp.maxDayAfter}\r\n        />\r\n      </div>\r\n      <div className='weather-card'>\r\n        <Card day={weekdays[twoDaysAfter.getDay()]} text={tomorrow}\r\n          date={twoDaysAfter.getDate() + ' ' + months[twoDaysAfter.getMonth()]}\r\n          img='/rain.png'\r\n          min={temp.minTwoDays}\r\n          max={temp.maxTwoDays}\r\n        />\r\n      </div>\r\n      <div className='weather-card'>\r\n        <Card day={weekdays[threeDaysAfter.getDay()]} text={tomorrow}\r\n          date={threeDaysAfter.getDate() + ' ' + months[threeDaysAfter.getMonth()]}\r\n          img='/transparent-weather-4.png'\r\n          min={temp.minThreeDays}\r\n          max={temp.maxThreeDays}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Next","import React, { useEffect, useState } from 'react';\r\nimport './Main.css';\r\nimport axios from 'axios';\r\nimport Parameters from './Parameters';\r\nimport Next from './forecast/Next';\r\n\r\nconst Main = () => {\r\n  const [weather, setWeather] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://api.openweathermap.org/data/2.5/weather?q=Tbilisi&units=metric&appid=aa2a5fcc4cb630593c42dbf9b522de88')\r\n      .then(res => {\r\n        const data = res.data;\r\n        setWeather({\r\n          temp: Math.round(data.main.temp),\r\n          feel: data.main.feels_like,\r\n          humidity: data.main.humidity,\r\n          wind: data.wind.speed * 3.6\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }, [])\r\n\r\n  return (\r\n    <div className='Main'>\r\n      <div className='weather-container'>\r\n        <div className='background'>\r\n          <div className='temperature'>\r\n            <div className='index'>\r\n              <div>\r\n                <h1> {weather.temp} &#176;</h1>\r\n                <p className='clouds'>Sunny</p>\r\n              </div>\r\n              <div className='row'>\r\n                <Parameters text='RealFeel' num={weather.feel} icon='&#176;' />\r\n                <hr className='vertical-line' />\r\n                <Parameters text='Humidity' num={weather.humidity} icon='%' />\r\n                <hr className='vertical-line' />\r\n                <Parameters text='Wind' num={weather.wind} icon='km/h' />\r\n              </div>\r\n            </div>\r\n            <div className=\"index\">\r\n              <h1 className='city'>Tbilisi</h1>\r\n              <hr className='white-line' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='black-line'>\r\n        </div>\r\n        <div className='weekdays'>\r\n          <Next />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport './HomePage.css';\r\nimport Header from './header/Header';\r\nimport Main from './main/Main';\r\n\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div className='HomePage'>\r\n            <Header />\r\n            <Main />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import './App.css';\nimport Container from './container/Container';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <HomePage />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}